gcc -save-temps code.c会产生四个文件，产生的顺序依次为：
code.c-->(编译预处理指令)-->code.i-->(C语言编译器)-->code.s(汇编代码文件)
-->code.s(目标代码文件)-->a.out(可执行文件)

code.i文件的部分代码
int main(){
 printf("%f\n",2*3.14159*3.0);

 return 0;
}

code.c文件的部分代码
#include <stdio.h>
//const double PI =3.14159;
#define  PI 3.14159

int main(){
	printf("%f\n",2*PI*3.0);
//	printf("%f\n",2*PI);
	return 0;
}

其实在c语言执行编译预处理指令时，把宏定义直接替换掉了，进行最直接的文本替换
1.如果一一个宏的值中有其他的宏的名字,也是会被替换的
2.如果一一个宏的值超过一一行行,最后一一行行之前的行行末需要加\
3.宏的值后面面出现的注释不会被当作宏的值的一一部分


#define _DEBUG
这类宏是用用于条件编译的,后面面有其他的编译预处理指令来检查这个宏是否已经被定义过了
如果没有定义我们编译一种代码，否则编译另一种代码


预定义的宏
• __LINE__	当前代码在文件中的行号
• __FILE__	当前文件的文件名称
• __DATE__	当前的日期
• __TIME__	当前的时间
• __STDC__	